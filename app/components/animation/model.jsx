/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public/models/6692c2f7f174a747797255bb.glb app/components/animation 
*/

import React, { useEffect, useRef } from 'react'
import { useFrame } from '@react-three/fiber'
import { useAnimations, useFBX, useGLTF } from '@react-three/drei'
import { useControls } from "leva"
import { Vector3 } from 'three'

export function Model(props) {

  const { animation } = props;
  const { headFollow, cursorFollow } = useControls({
    headFollow: false,
    cursorFollow: false,
  });
  const { /* scene, */ nodes, materials } = useGLTF('/models/6692c2f7f174a747797255bb.glb')
  /* const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]) */
  /* const { nodes, materials } = useGraph(clone) */
  const group = useRef();

  const { animations: typingAnimation } = useFBX("/animations/Typing.fbx");
  const { animations: standingAnimation } = useFBX("/animations/Standing.fbx");
  const { animations: skateboardingPushingAnimation } = useFBX("/animations/Skateboarding_pushing.fbx");
  const { animations: skateboardingCruisingAnimation } = useFBX("/animations/Skateboarding_cruising.fbx");
  const { animations: sittingAnimation } = useFBX("/animations/Sitting.fbx");
  const { animations: shoulderThrowAnimation } = useFBX("/animations/Shoulder_throw.fbx");
  const { animations: salsaDancingAnimation } = useFBX("/animations/Salsa_Dancing.fbx");
  const { animations: capoeiraAnimation } = useFBX("/animations/Capoeira.fbx");
  const { animations: wavingAnimation } = useFBX("/animations/Waving.fbx");
  const { animations: saluteAnimation } = useFBX("/animations/Salute.fbx");

  typingAnimation[0].name = "Typing"
  standingAnimation[0].name = "Standing"
  skateboardingPushingAnimation[0].name = "SkateboardingPushing"
  skateboardingCruisingAnimation[0].name = "SkateboardingCruising"
  sittingAnimation[0].name = "Sitting"
  shoulderThrowAnimation[0].name = "ShoulderThrow"
  salsaDancingAnimation[0].name = "SalsaDance"
  capoeiraAnimation[0].name = "Capoeira"
  wavingAnimation[0].name = "Waving"
  saluteAnimation[0].name = "Salute"

  const { actions } = useAnimations([
    typingAnimation[0],
    standingAnimation[0],
    sittingAnimation[0],
    salsaDancingAnimation[0],
    skateboardingCruisingAnimation[0],
    skateboardingPushingAnimation[0],
    shoulderThrowAnimation[0],
    capoeiraAnimation[0],
    wavingAnimation[0],
    saluteAnimation[0]
  ], group);

  useFrame((state) => {
    
    if (headFollow) {    
      group.current.getObjectByName("Head").lookAt(state.camera.position)
    } 
    if (cursorFollow) {
      const target = new Vector3(state.pointer.x, state.pointer.y, 1);
      group.current.getObjectByName("Spine2").lookAt(target)
    }
  })

  useEffect(() => {
    console.log("Animation: ", animation)
    actions[animation].reset().fadeIn(0.5).play();
    return () => {
      actions[animation].reset().fadeOut(0.5);
    }
  }, [animation]) 


  return (
    <group {...props} ref={group} dispose={null}>
      <group rotation-x={-Math.PI / 2}>
      <primitive object={nodes.Hips} />
      <skinnedMesh geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
      <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
      <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/6692c2f7f174a747797255bb.glb')
